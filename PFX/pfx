#!/bin/sh
#########################################################################
# THIS IS PROVIDED "AS IS", WITHOUT ANY WARRANTY, AND WITHOUT ANY SUPPORT. 
# LICENSE : CC-BY-SA 3.0 - http://creativecommons.org/licenses/by-sa/3.0/ 
# PFX Poller File eXchange
# Test with CentOS 6 / Centreon 2.6 / Nagios 3.5.1
# Scripts to tranfert Nagios configuration in FTP
#########################################################################
# eMaintenance - Matthieu PERRIN (OAB) - Septembre 2014
#
# chkconfig: 345 99 01
# description: PFX_get_local_cmd Deplace des commandes nagios de Central.cmd a nagios.cmd

DAEMON=/usr/local/pfx/pfxd.sh
mkdir -p /var/log/pfx
chown -R nagios.nagios /var/log/pfx
chown -R nagios.nagios /usr/local/pfx
LOGFILE=/var/log/pfx/pfxd.log
#USER=nagios
# run AutoConfPFX as root
USER=root
. /etc/init.d/functions

pids=0

get_pid()
{
		pids=$(ps aux | grep $DAEMON | grep -v grep | awk '{print $2}')
}

start()
{
	get_pid
	echo -n "Starting `basename $DAEMON`"
	
	if [ -z "$pids" ]
	then
		runuser -l $USER -c "$DAEMON $1 >> $LOGFILE 2>&1 &"
		#$DAEMON $1 >> $LOGFILE 2>&1 &
		[ -z "$1" ] || echo "Debug mode"
		get_pid
		if [ -z "$pids" ]
		then
			echo_failure			
		else
			echo -n " PID=$pids"
			echo_success
		fi
	
	else
		echo -n " Already running PID=$pids"
		echo_failure	
	
	fi
echo ""
}

stop()
{
	get_pid
	echo -n "Stopping `basename $DAEMON`"
	
	if [ -z "$pids" ]
	then
		echo -n " Already stopping"
		echo_failure
	else	
		echo -n " PID=$pids"
		kill $pids
		
		i=0
		while [ $i -lt 6 ]; do
			echo -n "."
			sleep 1			
			get_pid
			i=$((i+1))
			[ -z "$pids" ] && i=7
		done
		echo ""
		
		if [ -z "$pids" ]
		then
			echo_success
		else			
			echo_failure
		fi
		
		
	fi
echo ""
}

forcestop()
{
	stop
	pgrep PFX | xargs kill 
}

reinstall()
{
	stop
	/usr/local/pfx/PFX_install.sh
	start
}

status()
{
	get_pid
	
		if [ -z "$pids" ]
		then
			echo -n "`basename $DAEMON` is NOT running"
		else
			echo -n "`basename $DAEMON` is running PID=$pids"
		fi
echo ""
}


# See how we were called.
case "$1" in

        start)
				start
                ;;

        stop)
				stop
                ;;

        force-stop)
				forcestop
                ;;

        status)
                status
                ;;

        install)
                reinstall
                ;;

        restart)
                stop
                start
                ;;
		debug)
                stop
                start debug
                ;;

        *)
                echo "Usage: $0 {start|stop|force-stop|restart|debug|install|status}"
                exit 1
                ;;

esac
